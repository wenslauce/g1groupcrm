import { z } from 'zod'\n\nexport const trackingRecordSchema = z.object({\n  skr_id: z.string().uuid('Invalid SKR ID'),\n  location: z.string().min(1, 'Location is required').max(255, 'Location is too long'),\n  latitude: z.number().min(-90).max(90).optional(),\n  longitude: z.number().min(-180).max(180).optional(),\n  status: z.enum(['in_vault', 'in_transit', 'at_destination', 'delivered', 'returned']),\n  notes: z.string().optional(),\n  recorded_by: z.string().uuid('Invalid user ID').optional(),\n  metadata: z.record(z.any()).optional()\n})\n\nexport const trackingUpdateSchema = z.object({\n  location: z.string().min(1, 'Location is required').max(255, 'Location is too long').optional(),\n  latitude: z.number().min(-90).max(90).optional(),\n  longitude: z.number().min(-180).max(180).optional(),\n  status: z.enum(['in_vault', 'in_transit', 'at_destination', 'delivered', 'returned']).optional(),\n  notes: z.string().optional(),\n  metadata: z.record(z.any()).optional()\n})\n\nexport const trackingFiltersSchema = z.object({\n  skr_id: z.string().uuid().optional(),\n  location: z.string().optional(),\n  status: z.enum(['in_vault', 'in_transit', 'at_destination', 'delivered', 'returned']).optional(),\n  date_from: z.string().datetime().optional(),\n  date_to: z.string().datetime().optional(),\n  page: z.number().min(1).default(1),\n  limit: z.number().min(1).max(100).default(10)\n})\n\nexport const locationUpdateSchema = z.object({\n  skr_id: z.string().uuid('Invalid SKR ID'),\n  location: z.string().min(1, 'Location is required'),\n  latitude: z.number().min(-90).max(90).optional(),\n  longitude: z.number().min(-180).max(180).optional(),\n  notes: z.string().optional()\n})\n\nexport type TrackingRecordData = z.infer<typeof trackingRecordSchema>\nexport type TrackingUpdateData = z.infer<typeof trackingUpdateSchema>\nexport type TrackingFilters = z.infer<typeof trackingFiltersSchema>\nexport type LocationUpdateData = z.infer<typeof locationUpdateSchema>"